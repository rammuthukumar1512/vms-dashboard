import { CommonModule} from "@angular/common";
import { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from "@angular/material/dialog";
import { MatButtonModule } from "@angular/material/button";
import { MatTableModule } from "@angular/material/table";
import { Component, Inject } from "@angular/core";
import { ToastService } from "../core/services/toast.service";
import { CveResult } from "../models/computer.model";
import { MatTooltip } from "@angular/material/tooltip";

@Component({
  selector: 'app-cpe-vulnerability-dialog',
  templateUrl: './cpe-vulnerability-dialog.component.html',
  styleUrls: ['./cpe-vulnerability-dialog.component.css'],
  standalone: true,
  imports: [CommonModule, MatDialogModule, MatButtonModule, MatTableModule, MatTooltip]
})

export class CpeVulnerabilityDialogComponent {
  displayedColumns: string[] = ['cveId', 'description', 'severity', 'cvssScore'];
originalVulnerabilities: CveResult[] = [];
  constructor(
    public dialogRef: MatDialogRef<CpeVulnerabilityDialogComponent>,
      private toastService: ToastService,
    @Inject(MAT_DIALOG_DATA) public data: { cpeName: string; vulnerabilities: CveResult[] }
  ) {}

  sortState: number = 0; // 0 = none, 1 = ascending, 2 = descending
toggleSort() {
  this.sortState = (this.sortState + 1) % 3;

  if (this.sortState === 0) {
    this.data.vulnerabilities = [...this.originalVulnerabilities]; // restore original
  } else if (this.sortState === 1) {
    this.data.vulnerabilities = [...this.data.vulnerabilities].sort(
      (a, b) => (a.cvssMetrics[0]?.baseScore || 0) - (b.cvssMetrics[0]?.baseScore || 0)
    );
  } else {
    this.data.vulnerabilities = [...this.data.vulnerabilities].sort(
      (a, b) => (b.cvssMetrics[0]?.baseScore || 0) - (a.cvssMetrics[0]?.baseScore || 0)
    );
  }
}

ngOnInit() {
  this.originalVulnerabilities = [...this.data.vulnerabilities];
}

}