import { Component, Inject } from '@angular/core';
import { MatDialogRef, MAT_DIALOG_DATA, MatDialogModule } from '@angular/material/dialog';
import { CommonModule } from '@angular/common';
import { MatButtonModule } from '@angular/material/button';
import { MatTableModule } from '@angular/material/table';
import { MatCardModule } from '@angular/material/card';
import { Vulnerability } from '../../models/computer.model';

@Component({
  selector: 'app-vulnerability-dialog',
  standalone: true,
  imports: [CommonModule, MatDialogModule, MatButtonModule, MatTableModule, MatCardModule],
  templateUrl: './vulnerability-dialog.component.html',
  styleUrls: ['./vulnerability-dialog.component.css']
})
export class VulnerabilityDialogComponent {
  vulnDisplayedColumns: string[] = ['cveId', 'description', 'severity', 'cvssScore'];
  filteredVulnerabilities: Vulnerability[] = [];
  selectedSeverity: 'Critical' | 'High' | 'Medium' | 'Low' | null = null;

  constructor(
    public dialogRef: MatDialogRef<VulnerabilityDialogComponent>,
    @Inject(MAT_DIALOG_DATA) public data: {
      cpeName: String;
      softwareName: string;
      vulnerabilities: Vulnerability[];
      severityCounts: {
        critical: number;
        high: number;
        medium: number;
        low: number;
      };
    }
  ) {
    this.filteredVulnerabilities = this.data.vulnerabilities;
  }

  filterVulnerabilities(severity: 'Critical' | 'High' | 'Medium' | 'Low' | null): void {
    this.selectedSeverity = severity;
    this.filteredVulnerabilities = !severity
      ? this.data.vulnerabilities
      : this.data.vulnerabilities.filter(vuln =>
          vuln.severity.toLowerCase() === severity.toLowerCase()
        );
    console.log('Filtered vulnerabilities:', this.filteredVulnerabilities);
  }
}
